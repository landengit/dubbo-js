{
  "fileToGenerate": ["protobuf/reflection.proto"],
  "parameter": "exportCommonSymbols=false,unknownFields=true,usePrototypeForDefaults=true",
  "protoFile": [
    {
      "name": "protobuf/reflection.proto",
      "package": "triple.reflection.v1alpha",
      "dependency": [],
      "publicDependency": [],
      "weakDependency": [],
      "messageType": [
        {
          "name": "ServerReflectionRequest",
          "field": [
            {
              "name": "host",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "host",
              "proto3Optional": false
            },
            {
              "name": "file_by_filename",
              "number": 3,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "fileByFilename",
              "proto3Optional": false
            },
            {
              "name": "file_containing_symbol",
              "number": 4,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "fileContainingSymbol",
              "proto3Optional": false
            },
            {
              "name": "file_containing_extension",
              "number": 5,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.ExtensionRequest",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "fileContainingExtension",
              "proto3Optional": false
            },
            {
              "name": "all_extension_numbers_of_type",
              "number": 6,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "allExtensionNumbersOfType",
              "proto3Optional": false
            },
            {
              "name": "list_services",
              "number": 7,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "listServices",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [
            {
              "name": "message_request"
            }
          ],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "ExtensionRequest",
          "field": [
            {
              "name": "containing_type",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "containingType",
              "proto3Optional": false
            },
            {
              "name": "extension_number",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "extensionNumber",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "ServerReflectionResponse",
          "field": [
            {
              "name": "valid_host",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "validHost",
              "proto3Optional": false
            },
            {
              "name": "original_request",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.ServerReflectionRequest",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "originalRequest",
              "proto3Optional": false
            },
            {
              "name": "file_descriptor_response",
              "number": 4,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.FileDescriptorResponse",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "fileDescriptorResponse",
              "proto3Optional": false
            },
            {
              "name": "all_extension_numbers_response",
              "number": 5,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.ExtensionNumberResponse",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "allExtensionNumbersResponse",
              "proto3Optional": false
            },
            {
              "name": "list_services_response",
              "number": 6,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.ListServiceResponse",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "listServicesResponse",
              "proto3Optional": false
            },
            {
              "name": "error_response",
              "number": 7,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.ErrorResponse",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "errorResponse",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [
            {
              "name": "message_response"
            }
          ],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "FileDescriptorResponse",
          "field": [
            {
              "name": "file_descriptor_proto",
              "number": 1,
              "label": "LABEL_REPEATED",
              "type": "TYPE_BYTES",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "fileDescriptorProto",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "ExtensionNumberResponse",
          "field": [
            {
              "name": "base_type_name",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "baseTypeName",
              "proto3Optional": false
            },
            {
              "name": "extension_number",
              "number": 2,
              "label": "LABEL_REPEATED",
              "type": "TYPE_INT32",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "extensionNumber",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "ListServiceResponse",
          "field": [
            {
              "name": "service",
              "number": 1,
              "label": "LABEL_REPEATED",
              "type": "TYPE_MESSAGE",
              "typeName": ".triple.reflection.v1alpha.ServiceResponse",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "service",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "ServiceResponse",
          "field": [
            {
              "name": "name",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "name",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "ErrorResponse",
          "field": [
            {
              "name": "error_code",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_INT32",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "errorCode",
              "proto3Optional": false
            },
            {
              "name": "error_message",
              "number": 2,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "errorMessage",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        }
      ],
      "enumType": [],
      "service": [
        {
          "name": "ServerReflection",
          "method": [
            {
              "name": "ServerReflectionInfo",
              "inputType": ".triple.reflection.v1alpha.ServerReflectionRequest",
              "outputType": ".triple.reflection.v1alpha.ServerReflectionResponse",
              "clientStreaming": true,
              "serverStreaming": true
            }
          ]
        }
      ],
      "extension": [],
      "options": {
        "javaPackage": "",
        "javaOuterClassname": "",
        "javaMultipleFiles": false,
        "javaGenerateEqualsAndHash": false,
        "javaStringCheckUtf8": false,
        "optimizeFor": "SPEED",
        "goPackage": "github.com/dubbogo/grpc-go/reflection/triple_reflection_v1alpha",
        "ccGenericServices": false,
        "javaGenericServices": false,
        "pyGenericServices": false,
        "phpGenericServices": false,
        "deprecated": false,
        "ccEnableArenas": false,
        "objcClassPrefix": "",
        "csharpNamespace": "",
        "swiftPrefix": "",
        "phpClassPrefix": "",
        "phpNamespace": "",
        "phpMetadataNamespace": "",
        "rubyPackage": "",
        "uninterpretedOption": []
      },
      "sourceCodeInfo": {
        "location": [
          {
            "path": [],
            "span": [19, 0, 140, 1],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [12],
            "span": [19, 0, 18],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": [
              "\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n",
              " Service exported by server reflection\n"
            ]
          },
          {
            "path": [8],
            "span": [21, 0, 86],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [8, 11],
            "span": [21, 0, 86],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [2],
            "span": [23, 0, 34],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0],
            "span": [25, 0, 30, 1],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 1],
            "span": [25, 8, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0],
            "span": [28, 2, 29, 48],
            "leadingComments": " The reflection service is structured as a bidirectional stream, ensuring\n all related requests go to a single server.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 1],
            "span": [28, 6, 26],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 5],
            "span": [28, 27, 33],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 2],
            "span": [28, 34, 57],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 6],
            "span": [29, 15, 21],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 3],
            "span": [29, 22, 46],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0],
            "span": [33, 0, 65, 1],
            "leadingComments": " The message sent by the client when calling ServerReflectionInfo method.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 1],
            "span": [33, 8, 31],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0],
            "span": [34, 2, 18],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0, 5],
            "span": [34, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0, 1],
            "span": [34, 9, 13],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0, 3],
            "span": [34, 16, 17],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 8, 0],
            "span": [38, 2, 64, 3],
            "leadingComments": " To use reflection service, the client should set one of the following\n fields in message_request. The server distinguishes requests by their\n defined field and then handles them using corresponding methods.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 8, 0, 1],
            "span": [38, 8, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 1],
            "span": [40, 4, 32],
            "leadingComments": " Find a proto file by the file name.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 1, 5],
            "span": [40, 4, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 1, 1],
            "span": [40, 11, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 1, 3],
            "span": [40, 30, 31],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 2],
            "span": [45, 4, 38],
            "leadingComments": " Find the proto file that declares the given fully-qualified symbol name.\n This field should be a fully-qualified symbol name\n (e.g. <package>.<service>[.<method>] or <package>.<type>).\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 2, 5],
            "span": [45, 4, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 2, 1],
            "span": [45, 11, 33],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 2, 3],
            "span": [45, 36, 37],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 3],
            "span": [49, 4, 51],
            "leadingComments": " Find the proto file which defines an extension extending the given\n message type with the given field number.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 3, 6],
            "span": [49, 4, 20],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 3, 1],
            "span": [49, 21, 46],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 3, 3],
            "span": [49, 49, 50],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 4],
            "span": [59, 4, 45],
            "leadingComments": " Finds the tag numbers used by all known extensions of extendee_type, and\n appends them to ExtensionNumberResponse in an undefined order.\n Its corresponding method is best-effort: it's not guaranteed that the\n reflection service will implement this method, and it's not guaranteed\n that this method will provide all extensions. Returns\n StatusCode::UNIMPLEMENTED if it's not implemented.\n This field should be a fully-qualified type name. The format is\n <package>.<type>\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 4, 5],
            "span": [59, 4, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 4, 1],
            "span": [59, 11, 40],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 4, 3],
            "span": [59, 43, 44],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 5],
            "span": [63, 4, 29],
            "leadingComments": " List the full names of registered services. The content will not be\n checked.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 5, 5],
            "span": [63, 4, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 5, 1],
            "span": [63, 11, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 5, 3],
            "span": [63, 27, 28],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1],
            "span": [69, 0, 73, 1],
            "leadingComments": " The type name and extension number sent by the client when requesting\n file_containing_extension.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 1],
            "span": [69, 8, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0],
            "span": [71, 2, 29],
            "leadingComments": " Fully-qualified type name. The format should be <package>.<type>\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0, 5],
            "span": [71, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0, 1],
            "span": [71, 9, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0, 3],
            "span": [71, 27, 28],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 1],
            "span": [72, 2, 29],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 1, 5],
            "span": [72, 2, 7],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 1, 1],
            "span": [72, 8, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 1, 3],
            "span": [72, 27, 28],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2],
            "span": [76, 0, 99, 1],
            "leadingComments": " The message sent by the server to answer ServerReflectionInfo method.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 1],
            "span": [76, 8, 32],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 0],
            "span": [77, 2, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 0, 5],
            "span": [77, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 0, 1],
            "span": [77, 9, 19],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 0, 3],
            "span": [77, 22, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 1],
            "span": [78, 2, 47],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 1, 6],
            "span": [78, 2, 25],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 1, 1],
            "span": [78, 26, 42],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 1, 3],
            "span": [78, 45, 46],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 8, 0],
            "span": [81, 2, 98, 3],
            "leadingComments": " The server sets one of the following fields according to the\n message_request in the request.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 8, 0, 1],
            "span": [81, 8, 24],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 2],
            "span": [88, 4, 56],
            "leadingComments": " This message is used to answer file_by_filename, file_containing_symbol,\n file_containing_extension requests with transitive dependencies.\n As the repeated label is not allowed in oneof fields, we use a\n FileDescriptorResponse message to encapsulate the repeated fields.\n The reflection service is allowed to avoid sending FileDescriptorProtos\n that were previously sent in response to earlier requests in the stream.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 2, 6],
            "span": [88, 4, 26],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 2, 1],
            "span": [88, 27, 51],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 2, 3],
            "span": [88, 54, 55],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 3],
            "span": [91, 4, 63],
            "leadingComments": " This message is used to answer all_extension_numbers_of_type requests.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 3, 6],
            "span": [91, 4, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 3, 1],
            "span": [91, 28, 58],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 3, 3],
            "span": [91, 61, 62],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 4],
            "span": [94, 4, 51],
            "leadingComments": " This message is used to answer list_services requests.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 4, 6],
            "span": [94, 4, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 4, 1],
            "span": [94, 24, 46],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 4, 3],
            "span": [94, 49, 50],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 5],
            "span": [97, 4, 37],
            "leadingComments": " This message is used when an error occurs.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 5, 6],
            "span": [97, 4, 17],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 5, 1],
            "span": [97, 18, 32],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 2, 2, 5, 3],
            "span": [97, 35, 36],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3],
            "span": [104, 0, 109, 1],
            "leadingComments": " Serialized FileDescriptorProto messages sent by the server answering\n a file_by_filename, file_containing_symbol, or file_containing_extension\n request.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3, 1],
            "span": [104, 8, 30],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3, 2, 0],
            "span": [108, 2, 43],
            "leadingComments": " Serialized FileDescriptorProto messages. We avoid taking a dependency on\n descriptor.proto, which uses proto2 only features, by making them opaque\n bytes instead.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3, 2, 0, 4],
            "span": [108, 2, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3, 2, 0, 5],
            "span": [108, 11, 16],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3, 2, 0, 1],
            "span": [108, 17, 38],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 3, 2, 0, 3],
            "span": [108, 41, 42],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4],
            "span": [113, 0, 118, 1],
            "leadingComments": " A list of extension numbers sent by the server answering\n all_extension_numbers_of_type request.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 1],
            "span": [113, 8, 31],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 0],
            "span": [116, 2, 28],
            "leadingComments": " Full name of the base type, including the package name. The format\n is <package>.<type>\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 0, 5],
            "span": [116, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 0, 1],
            "span": [116, 9, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 0, 3],
            "span": [116, 26, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 1],
            "span": [117, 2, 38],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 1, 4],
            "span": [117, 2, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 1, 5],
            "span": [117, 11, 16],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 1, 1],
            "span": [117, 17, 33],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 4, 2, 1, 3],
            "span": [117, 36, 37],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5],
            "span": [121, 0, 125, 1],
            "leadingComments": " A list of ServiceResponse sent by the server answering list_services request.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5, 1],
            "span": [121, 8, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5, 2, 0],
            "span": [124, 2, 39],
            "leadingComments": " The information of each service may be expanded in the future, so we use\n ServiceResponse message to encapsulate it.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5, 2, 0, 4],
            "span": [124, 2, 10],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5, 2, 0, 6],
            "span": [124, 11, 26],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5, 2, 0, 1],
            "span": [124, 27, 34],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 5, 2, 0, 3],
            "span": [124, 37, 38],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 6],
            "span": [129, 0, 133, 1],
            "leadingComments": " The information of a single service used by ListServiceResponse to answer\n list_services request.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 6, 1],
            "span": [129, 8, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 6, 2, 0],
            "span": [132, 2, 18],
            "leadingComments": " Full name of a registered service, including its package name. The format\n is <package>.<service>\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 6, 2, 0, 5],
            "span": [132, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 6, 2, 0, 1],
            "span": [132, 9, 13],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 6, 2, 0, 3],
            "span": [132, 16, 17],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7],
            "span": [136, 0, 140, 1],
            "leadingComments": " The error code and error message sent by the server when an error occurs.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 1],
            "span": [136, 8, 21],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 0],
            "span": [138, 2, 23],
            "leadingComments": " This field uses the error codes defined in grpc::StatusCode.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 0, 5],
            "span": [138, 2, 7],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 0, 1],
            "span": [138, 8, 18],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 0, 3],
            "span": [138, 21, 22],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 1],
            "span": [139, 2, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 1, 5],
            "span": [139, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 1, 1],
            "span": [139, 9, 22],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 7, 2, 1, 3],
            "span": [139, 25, 26],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          }
        ]
      },
      "syntax": "proto3"
    }
  ],
  "compilerVersion": {
    "major": 3,
    "minor": 21,
    "patch": 5,
    "suffix": ""
  }
}
