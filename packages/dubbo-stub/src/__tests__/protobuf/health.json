{
  "fileToGenerate": ["protobuf/health.proto"],
  "parameter": "exportCommonSymbols=false,unknownFields=true,usePrototypeForDefaults=true",
  "protoFile": [
    {
      "name": "protobuf/health.proto",
      "package": "grpc.health.v1",
      "dependency": [],
      "publicDependency": [],
      "weakDependency": [],
      "messageType": [
        {
          "name": "HealthCheckRequest",
          "field": [
            {
              "name": "service",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_STRING",
              "typeName": "",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "service",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        },
        {
          "name": "HealthCheckResponse",
          "field": [
            {
              "name": "status",
              "number": 1,
              "label": "LABEL_OPTIONAL",
              "type": "TYPE_ENUM",
              "typeName": ".grpc.health.v1.HealthCheckResponse.ServingStatus",
              "extendee": "",
              "defaultValue": "",
              "oneofIndex": 0,
              "jsonName": "status",
              "proto3Optional": false
            }
          ],
          "extension": [],
          "nestedType": [],
          "enumType": [
            {
              "name": "ServingStatus",
              "value": [
                {
                  "name": "UNKNOWN",
                  "number": 0
                },
                {
                  "name": "SERVING",
                  "number": 1
                },
                {
                  "name": "NOT_SERVING",
                  "number": 2
                },
                {
                  "name": "SERVICE_UNKNOWN",
                  "number": 3
                }
              ],
              "reservedRange": [],
              "reservedName": []
            }
          ],
          "extensionRange": [],
          "oneofDecl": [],
          "reservedRange": [],
          "reservedName": []
        }
      ],
      "enumType": [],
      "service": [
        {
          "name": "Health",
          "method": [
            {
              "name": "Check",
              "inputType": ".grpc.health.v1.HealthCheckRequest",
              "outputType": ".grpc.health.v1.HealthCheckResponse",
              "clientStreaming": false,
              "serverStreaming": false
            },
            {
              "name": "Watch",
              "inputType": ".grpc.health.v1.HealthCheckRequest",
              "outputType": ".grpc.health.v1.HealthCheckResponse",
              "clientStreaming": false,
              "serverStreaming": true
            }
          ]
        }
      ],
      "extension": [],
      "options": {
        "javaPackage": "",
        "javaOuterClassname": "",
        "javaMultipleFiles": false,
        "javaGenerateEqualsAndHash": false,
        "javaStringCheckUtf8": false,
        "optimizeFor": "SPEED",
        "goPackage": "github.com/dubbogo/grpc-go/health/triple_health_v1",
        "ccGenericServices": false,
        "javaGenericServices": false,
        "pyGenericServices": false,
        "phpGenericServices": false,
        "deprecated": false,
        "ccEnableArenas": false,
        "objcClassPrefix": "",
        "csharpNamespace": "",
        "swiftPrefix": "",
        "phpClassPrefix": "",
        "phpNamespace": "",
        "phpMetadataNamespace": "",
        "rubyPackage": "",
        "uninterpretedOption": []
      },
      "sourceCodeInfo": {
        "location": [
          {
            "path": [],
            "span": [20, 0, 61, 1],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [12],
            "span": [20, 0, 18],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": [
              "\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n",
              " The canonical version of this proto can be found at\n https://github.com/grpc/grpc-proto/blob/master/grpc/health/v1/health.proto\n"
            ]
          },
          {
            "path": [2],
            "span": [22, 0, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [8],
            "span": [24, 0, 73],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [8, 11],
            "span": [24, 0, 73],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0],
            "span": [26, 0, 28, 1],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 1],
            "span": [26, 8, 26],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0],
            "span": [27, 2, 21],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0, 5],
            "span": [27, 2, 8],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0, 1],
            "span": [27, 9, 16],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 0, 2, 0, 3],
            "span": [27, 19, 20],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1],
            "span": [30, 0, 38, 1],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 1],
            "span": [30, 8, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0],
            "span": [31, 2, 36, 3],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 1],
            "span": [31, 7, 20],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 0],
            "span": [32, 4, 16],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 0, 1],
            "span": [32, 4, 11],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 0, 2],
            "span": [32, 14, 15],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 1],
            "span": [33, 4, 16],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 1, 1],
            "span": [33, 4, 11],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 1, 2],
            "span": [33, 14, 15],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 2],
            "span": [34, 4, 20],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 2, 1],
            "span": [34, 4, 15],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 2, 2],
            "span": [34, 18, 19],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 3],
            "span": [35, 4, 24],
            "leadingComments": "",
            "trailingComments": " Used only by the Watch method.\n",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 3, 1],
            "span": [35, 4, 19],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 4, 0, 2, 3, 2],
            "span": [35, 22, 23],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0],
            "span": [37, 2, 27],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0, 6],
            "span": [37, 2, 15],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0, 1],
            "span": [37, 16, 22],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [4, 1, 2, 0, 3],
            "span": [37, 25, 26],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0],
            "span": [40, 0, 61, 1],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 1],
            "span": [40, 8, 14],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0],
            "span": [43, 2, 62],
            "leadingComments": " If the requested service is unknown, the call will fail with status\n NOT_FOUND.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 1],
            "span": [43, 6, 11],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 2],
            "span": [43, 12, 30],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 0, 3],
            "span": [43, 41, 60],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 1],
            "span": [60, 2, 69],
            "leadingComments": " Performs a watch for the serving status of the requested service.\n The server will immediately send back a message indicating the current\n serving status.  It will then subsequently send a new message whenever\n the service's serving status changes.\n\n If the requested service is unknown when the call is received, the\n server will send a message setting the serving status to\n SERVICE_UNKNOWN but will *not* terminate the call.  If at some\n future point, the serving status of the service becomes known, the\n server will send a new message with the service's serving status.\n\n If the call terminates with status UNIMPLEMENTED, then clients\n should assume this method is not supported and should not retry the\n call.  If the call terminates with any other status (including OK),\n clients should retry the call with appropriate exponential backoff.\n",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 1, 1],
            "span": [60, 6, 11],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 1, 2],
            "span": [60, 12, 30],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 1, 6],
            "span": [60, 41, 47],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          },
          {
            "path": [6, 0, 2, 1, 3],
            "span": [60, 48, 67],
            "leadingComments": "",
            "trailingComments": "",
            "leadingDetachedComments": []
          }
        ]
      },
      "syntax": "proto3"
    }
  ],
  "compilerVersion": {
    "major": 3,
    "minor": 21,
    "patch": 5,
    "suffix": ""
  }
}
